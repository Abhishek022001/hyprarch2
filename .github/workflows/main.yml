name: CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  Check:
    runs-on: ubuntu-latest

    steps:
      - name: Check out the repository
        uses: actions/checkout@v4

      - name: Check if README.md and .version files exist
        run: |
          if [ ! -f README.md ]; then
            echo "README.md is missing" && exit 1
          fi
          if [ ! -f .version ]; then
            echo ".version file is missing" && exit 1
          fi

      - name: Validate .version format
        run: |
          if ! grep -qE '^[0-9]+\\.[0-9]+\\.[0-9]+$' .version; then
            echo "Invalid version format in .version file" && exit 1
          fi

      - name: Syntax check for install.sh and scripts in src/
        run: |
          if [ -f install.sh ]; then
            shellcheck install.sh || { echo "Syntax check failed for install.sh"; exit 1; }
          fi
          find src -name "*.sh" -print0 | xargs -0 -n1 shellcheck || exit 1

      - name: Run install.sh (dry run mode)
        run: |
          bash install.sh --dry-run || echo "Dry run of install.sh failed" && exit 1

      - name: Validate configuration files in dotfiles directory
        run: |
          for file in dotfiles/*; do
            case "$file" in
              *.conf|*.yml|*.json)
                if [[ "$file" == *.json ]]; then
                  jq empty "$file" || { echo "JSON validation failed for $file"; exit 1; }
                elif [[ "$file" == *.yml ]]; then
                  yamllint "$file" || { echo "YAML validation failed for $file"; exit 1; }
                else
                  echo "$file: no specific validation, assumed valid."
                fi
                ;;
              *)
                echo "Skipping $file as it's not a recognized config type."
                ;;
            esac
          done

